{
  "name": "Javascript-data-model",
  "tagline": "A javascript data model for mvvm ( Angular , Vue and so on). You can handle data like server side ,including add,delete,update,find,filter,paging and so on.",
  "body": "# javascript-data-model\r\nA javascript data model for mvvm ( Angular , Vue and so on). You can handle data like server side ,including add,delete,update,find,filter,paging and so on.\r\n\r\n## Demo\r\n\r\n### Angular demo\r\n\r\n[Host on China Server](http://liaolunhui.hhappkf.com/javascript-data-model/demo/angular.html)\r\n\r\n[Host on github.io](https://liaolunhui.github.io/javascript-data-model/demo/angular.html)\r\n\r\n### Vue demo\r\n\r\n[Host on China Server](http://liaolunhui.hhappkf.com/javascript-data-model/demo/vue.html)\r\n\r\n[Host on github.io](https://liaolunhui.github.io/javascript-data-model/demo/vue.html)\r\n\r\n(https://liaolunhui.github.io/javascript-data-model/demo/vue.html)\r\n\r\n## Getting Start\r\nImport `javascript-data-model.js` in your project;\r\n``` html\r\n<script src=\"../javascript-data-model.js\"></script>\r\n```\r\n\r\nGenerate your data model with an Array that contain objects;\r\n``` js\r\nvar data=[{id:1,time:1479049721429,type:\"init\"},{id:2,time:1479049722163,type:\"init\"},{id:3,time:1479049722594,type:\"init\"}];\r\nvar dataModel=M(data);\r\n```\r\n\r\nBind data model's `current` property to your mvvm data;\r\n\r\n``` js\r\n$scope.list=dataModel.current;\r\n```\r\n\r\nDone , Now you can handle data like server side,it will also update the dom;\r\n## Property\r\n### all\r\n all data of the data model,contain filter out data.\r\n### current\r\ncurrent data ,doesn't contain filter out data.\r\n\r\n## Methods\r\n### add(object)\r\nadd an object to the data model\r\n``` js\r\ndataModel.add({id:4,time:1479050063675,type:'new'})\r\n```\r\n\r\n### delete(condition,orCondition)\r\ndelete objects from data model\r\n`condition` should be an object that specify what do you want to delete. if condition are not specified,it will delete all data.\r\n``` js\r\ndataModel.delete({type:'init'})\r\n//it will delete all data that `type` property is `init`\r\n```\r\n`orCondition` shoud be an Bool that specify logic `AND` or `OR`,default `AND`\r\n``` js\r\ndataModel.delete({id:2,type:'new'},true)\r\n//it will delete all data that `type` property is `init` or `id` is `2`\r\n```\r\n\r\n### update(updateTo,condition,orCondition)\r\nupdate object that match `condition`\r\n`updateTo` specify what property do you want to update to;\r\n``` js\r\ndataModel.update({type:'wiki'})\r\n//update all data's `type` property to `wiki`\r\n```\r\n\r\n`condition` similar to `delete` method\r\n`orCondition` similar to `delete` method\r\n\r\n### find/select(condition,orCondition,onlyCurrent,onlyOne)\r\nfind data match `condition`,return an array;\r\n`condition` similar to `delete` method;\r\n`orCondition` similar to `delete` method\r\n`onlyCurrent` Bool value specify if find from `current` data only. defalut `false`\r\n`onlyOne` Bool value specify if find One only;\r\n``` js\r\nvar matchData=dataModel.select({type:'init'})\r\n//return data that's `type` property is `init`\r\n```\r\n\r\n### findOne/selectOne(condition,orCondition,onlyCurrent)\r\nsimilar to select,only return first match data ( `object`)\r\n\r\n### filter(condition,orCondition,onlyCurrent)\r\nfind data that match `condition` from `all` property,and put it to `current` property\r\n\r\n### reset(arr)\r\nreset `all` property and filter arr to `current`\r\n\r\n### enablePage(quantityPerPage)\r\nenable paging\r\n`quantityPerPage` how many data per page,default `10`;\r\n\r\n### nextPage\r\ngo next page\r\n### prevPage\r\ngo previous page\r\n\r\n### pageSwitch(page)\r\ngo page specify by `page` argument\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}